buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
plugins {
    id 'eclipse'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'

version = '1.2.2-1.18.2'
group = 'cn.mcmod_mmf.mmlib'
archivesBaseName = 'mmlib'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.18.2'
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            properties 'mixin.env.disableRefMap': 'true'
            property 'forge.enabledGameTestNamespaces', 'mmlib'
            mods {
                mmlib {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            properties 'mixin.env.disableRefMap': 'true'
            property 'forge.enabledGameTestNamespaces', 'mmlib'
            mods {
                mmlib {
                    source sourceSets.main
                }
            }
        }
        
        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            properties 'mixin.env.disableRefMap': 'true'
            property 'forge.enabledGameTestNamespaces', 'mmlib'

            mods {
                mmlib {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            properties 'mixin.env.disableRefMap': 'true'
            property 'forge.enabledGameTestNamespaces', 'mmlib'
			args '--mod', 'mmlib', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                mmlib {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // JEI, Tinker's Construct, Mantle, Iron Chests, Natura, etc.
    maven { url = "https://dvs1.progwml6.com/files/maven" }
    // Patchouli
    maven { url = 'https://maven.blamejared.com' }
    // Curse Forge
    maven {
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.73'

    implementation fg.deobf("curse.maven:terrafirmacraft-302973:3970479")
    
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.18.2-70")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.18.2-70")
    
    compileOnly fg.deobf("mezz.jei:jei-1.18.2-forge:10.0.0.191")
    runtimeOnly fg.deobf("mezz.jei:jei-1.18.2-forge:10.0.0.191")
}


// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
            "Specification-Title": "mmlib",
            "Specification-Vendor": "mcmod.cn",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"mcmod.cn",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


jar.finalizedBy('reobfJar')

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allJava
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
        }
    }
    repositories {
        maven {
            url "file://${maven_loc}"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
