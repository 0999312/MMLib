plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

version = '1.2.7-1.20'
group = 'cn.mcmod_mmf.mysterious_mountain_lib'
archivesBaseName = 'mysterious_mountain_lib'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.20'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            properties 'mixin.env.disableRefMap': 'true'
<<<<<<< HEAD
            property 'forge.enabledGameTestNamespaces', 'mysterious_mountain_lib'
=======
            property 'forge.enabledGameTestNamespaces', 'mmlib'
>>>>>>> 35cb0068acff9d72e865ab87b47ceca433f326b8
            mods {
                mysterious_mountain_lib {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            properties 'mixin.env.disableRefMap': 'true'
<<<<<<< HEAD
            property 'forge.enabledGameTestNamespaces', 'mysterious_mountain_lib'
            mods {
                mysterious_mountain_lib {
=======
            property 'forge.enabledGameTestNamespaces', 'mmlib'
            mods {
                mmlib {
>>>>>>> 35cb0068acff9d72e865ab87b47ceca433f326b8
                    source sourceSets.main
                }
            }
        }
<<<<<<< HEAD

=======
        
>>>>>>> 35cb0068acff9d72e865ab87b47ceca433f326b8
        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            properties 'mixin.env.disableRefMap': 'true'
<<<<<<< HEAD
            property 'forge.enabledGameTestNamespaces', 'mysterious_mountain_lib'
=======
            property 'forge.enabledGameTestNamespaces', 'mmlib'
>>>>>>> 35cb0068acff9d72e865ab87b47ceca433f326b8

            mods {
                mysterious_mountain_lib {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            properties 'mixin.env.disableRefMap': 'true'
<<<<<<< HEAD
            property 'forge.enabledGameTestNamespaces', 'mysterious_mountain_lib'
			args '--mod', 'mysterious_mountain_lib', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
=======
            property 'forge.enabledGameTestNamespaces', 'mmlib'
			args '--mod', 'mmlib', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
>>>>>>> 35cb0068acff9d72e865ab87b47ceca433f326b8

            mods {
                mysterious_mountain_lib {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // JEI, Tinker's Construct, Mantle, Iron Chests, Natura, etc.
    maven { url = "https://dvs1.progwml6.com/files/maven" }
    // Patchouli
    maven { url = 'https://maven.blamejared.com' }
    // Curse Forge
    maven {
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
<<<<<<< HEAD

}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20-46.0.14'

=======
    
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.73'

    implementation fg.deobf("curse.maven:terrafirmacraft-302973:3970479")
    
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.18.2-70")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.18.2-70")
    
    compileOnly fg.deobf("mezz.jei:jei-1.18.2-forge:10.0.0.191")
    runtimeOnly fg.deobf("mezz.jei:jei-1.18.2-forge:10.0.0.191")
>>>>>>> 35cb0068acff9d72e865ab87b47ceca433f326b8
}


// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
            "Specification-Title": "mysterious_mountain_lib",
            "Specification-Vendor": "mcmod.cn",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"mcmod.cn",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allJava
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
        }
    }
    repositories {
        maven {
            url "file://${maven_loc}"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
